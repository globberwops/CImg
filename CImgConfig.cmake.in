@PACKAGE_INIT@

if(NOT TARGET CImg::CImg AND NOT CImg_BINARY_DIR)

  set_and_check(CImg_INCLUDE_DIRS "@PACKAGE_CMAKE_INSTALL_INCLUDEDIR@")
  include("${CMAKE_CURRENT_LIST_DIR}/CImgTargets.cmake")

  include(CMakeFindDependencyMacro)

  option(CImg_USE_CURL "Use the CURL library")
  if(CImg_USE_CURL)
    find_dependency(CURL REQUIRED)
    target_link_libraries(CImg::CImg INTERFACE CURL::libcurl)
    target_compile_definitions(CImg::CImg INTERFACE cimg_use_curl)
  endif()

  option(CImg_USE_FFMPEG "Use the FFMPEG libraries")
  if(CImg_USE_FFMPEG)
    find_dependency(PkgConfig QUIET REQUIRED)
    pkg_check_modules(LIBAVCODEC REQUIRED IMPORTED_TARGET GLOBAL libavcodec)
    pkg_check_modules(LIBAVFORMAT REQUIRED IMPORTED_TARGET GLOBAL libavformat)
    pkg_check_modules(LIBAVUTIL REQUIRED IMPORTED_TARGET GLOBAL libavutil)
    pkg_check_modules(LIBSWSCALE REQUIRED IMPORTED_TARGET GLOBAL libswscale)
    target_link_libraries(
      CImg::CImg INTERFACE PkgConfig::LIBAVCODEC PkgConfig::LIBAVFORMAT
                           PkgConfig::LIBAVUTIL PkgConfig::LIBSWSCALE)
    target_compile_definitions(CImg::CImg INTERFACE cimg_use_ffmpeg)
  endif()

  option(CImg_USE_FFTW3 "Use the FFTW3 library")
  if(CImg_USE_FFTW3)
    find_dependency(PkgConfig QUIET REQUIRED)
    pkg_check_modules(FFTW3 REQUIRED IMPORTED_TARGET GLOBAL fftw3)
    target_link_libraries(CImg::CImg INTERFACE PkgConfig::FFTW3)
    target_compile_definitions(CImg::CImg INTERFACE cimg_use_fftw3)
  endif()

  option(CImg_USE_JPEG "Use the JPEG library")
  if(CImg_USE_JPEG)
    find_dependency(JPEG REQUIRED)
    target_link_libraries(CImg::CImg INTERFACE JPEG::JPEG)
    target_compile_definitions(CImg::CImg INTERFACE cimg_use_jpeg)
  endif()

  option(CImg_USE_LAPACK "Use the LAPACK library")
  if(CImg_USE_LAPACK)
    find_dependency(LAPACK REQUIRED)
    target_link_libraries(CImg::CImg INTERFACE LAPACK::LAPACK)
    target_compile_definitions(CImg::CImg INTERFACE cimg_use_lapack)
  endif()

  option(CImg_USE_Magick "Use the Magick++ library")
  if(CImg_USE_Magick)
    find_dependency(PkgConfig QUIET REQUIRED)
    pkg_check_modules(MAGICK REQUIRED IMPORTED_TARGET GLOBAL Magick++)
    target_link_libraries(CImg::CImg INTERFACE PkgConfig::MAGICK)
    target_compile_definitions(CImg::CImg INTERFACE cimg_use_magick)
  endif()

  option(CImg_USE_OpenCV "Use the OpenCV library")
  if(CImg_USE_OpenCV)
    find_dependency(OpenCV REQUIRED)
    target_link_libraries(CImg::CImg INTERFACE ${OpenCV_LIBS})
    target_compile_definitions(CImg::CImg INTERFACE cimg_use_opencv)
  endif()

  option(CImg_USE_OpenEXR "Use the OpenEXR library")
  if(CImg_USE_OpenEXR)
    find_dependency(PkgConfig QUIET REQUIRED)
    pkg_check_modules(OPENEXR REQUIRED IMPORTED_TARGET GLOBAL OpenEXR)
    target_link_libraries(CImg::CImg INTERFACE PkgConfig::OPENEXR)
    target_compile_definitions(CImg::CImg INTERFACE cimg_use_openexr)
  endif()

  option(CImg_USE_OpenMP "Use the OpenMP library")
  if(CImg_USE_OpenMP)
    find_dependency(OpenMP REQUIRED)
    target_link_libraries(CImg::CImg INTERFACE OpenMP::OpenMP_CXX)
    target_compile_definitions(CImg::CImg INTERFACE cimg_use_openmp)
  endif()

  option(CImg_USE_PNG "Use the PNG library")
  if(CImg_USE_PNG)
    find_dependency(PNG REQUIRED)
    target_link_libraries(CImg::CImg INTERFACE PNG::PNG)
    target_compile_definitions(CImg::CImg INTERFACE cimg_use_png)
  endif()

  option(CImg_USE_PThread "Use the POSIX threads library")
  if(CImg_USE_PTHREAD)
    set(THREADS_PREFER_PTHREAD_FLAG
        ON
        CACHE INTERNAL "Prefer \"-pthread\" compiler and linker flag")
    find_dependency(Threads REQUIRED)
    target_link_libraries(CImg::CImg INTERFACE Threads::Threads)
    target_compile_definitions(CImg::CImg INTERFACE cimg_use_pthread)
  endif()

  option(CImg_USE_TIFF "Use the TIFF library")
  if(CImg_USE_TIFF)
    find_dependency(TIFF REQUIRED)
    target_link_libraries(CImg::CImg INTERFACE TIFF::TIFF)
    target_compile_definitions(CImg::CImg INTERFACE cimg_use_tiff)
  endif()

  option(CImg_USE_X11 "Use the X11 libraries")
  if(CImg_USE_X11)
    find_dependency(X11 REQUIRED)
    target_link_libraries(CImg::CImg INTERFACE X11::X11)
    target_compile_definitions(
      CImg::CImg INTERFACE cimg_display=1 cimg_use_xshm cimg_use_xrandr)
  endif()

  option(CImg_USE_ZLIB "Use the ZLIB library")
  if(CImg_USE_ZLIB)
    find_dependency(ZLIB REQUIRED)
    target_link_libraries(CImg::CImg INTERFACE ZLIB::ZLIB)
    target_compile_definitions(CImg::CImg INTERFACE cimg_use_zlib)
  endif()

endif()
